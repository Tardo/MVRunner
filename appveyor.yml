image: Visual Studio 2017

environment:
  matrix:
    - ZLIB_ROOT: C:\Program Files (x86)\zlib
      ZPG_ROOT: C:\Program Files (x86)\libZpg
      SFML_ROOT: c:\projects\SFML-2.5.1_win32
      SFML_PACKAGE: SFML-2.5.1-windows-vc15-32-bit.zip
      CMAKE_GENERATOR: Visual Studio 15 2017
      CMAKE_BUILD_TYPE: Debug
      ZPG_PACKER_NAME: zpg_packer_d
    - ZLIB_ROOT: C:\Program Files (x86)\zlib
      ZPG_ROOT: C:\Program Files (x86)\libZpg
      SFML_ROOT: c:\projects\SFML-2.5.1_win32
      SFML_PACKAGE: SFML-2.5.1-windows-vc15-32-bit.zip
      CMAKE_GENERATOR: Visual Studio 15 2017
      CMAKE_BUILD_TYPE: Release
      ZPG_PACKER_NAME: zpg_packer
    - ZLIB_ROOT: C:\Program Files\zlib
      ZPG_ROOT: C:\Program Files\libZpg
      SFML_ROOT: c:\projects\SFML-2.5.1_win64
      SFML_PACKAGE: SFML-2.5.1-windows-vc15-64-bit.zip
      CMAKE_GENERATOR: Visual Studio 15 2017 Win64
      CMAKE_BUILD_TYPE: Debug
      ZPG_PACKER_NAME: zpg_packer_d
    - ZLIB_ROOT: C:\Program Files\zlib
      ZPG_ROOT: C:\Program Files\libZpg
      SFML_ROOT: c:\projects\SFML-2.5.1_win64
      SFML_PACKAGE: SFML-2.5.1-windows-vc15-64-bit.zip
      CMAKE_GENERATOR: Visual Studio 15 2017 Win64
      CMAKE_BUILD_TYPE: Release
      ZPG_PACKER_NAME: zpg_packer

matrix:
  allow_failures:
    - platform: x64
      configuration: Release
    - platform: x86
      configuration: Release
    - platform: x64
      configuration: Debug
    - platform: x86
      configuration: Debug
  
cache:
  - c:\projects\SFML-2.5.1_win32
  - c:\projects\SFML-2.5.1_win64
  - C:\Program Files (x86)\libZpg
  - C:\Program Files (x86)\zlib
  - C:\Program Files\libZpg
  - C:\Program Files\zlib

install:
  - cd c:\projects
  # Download SFML 2.5.1 binaries
  - IF NOT EXIST "%SFML_ROOT%" (
    curl -LfsS -o sfml.zip https://www.sfml-dev.org/files/%SFML_PACKAGE% &&
    7z x sfml.zip &&
    move SFML-2.5.1 %SFML_ROOT%)
  # Download ZLib Source
  - IF NOT EXIST "%ZLIB_ROOT%" (
    curl -LfsS -o zlib-1.2.11.tar.gz http://zlib.net/zlib-1.2.11.tar.gz &&
    7z x zlib-1.2.11.tar.gz &&
    7z x zlib-1.2.11.tar &&
    cd zlib-1.2.11 &&
    md build & cd build &&
    cmake -Werror=dev -G"%CMAKE_GENERATOR%" .. &&
    cd .. &&
    cmake --build build --config %CMAKE_BUILD_TYPE% --target install &&
    cd ..)
  # Download libZpg Source
  - IF NOT EXIST "%ZPG_ROOT%" (
    curl -LfsS -o libzpg.zip https://gitlab.com/Tardo/Zpg/-/archive/master/Zpg-master.zip &&
    7z x libzpg.zip &&
    cd Zpg-master &&
    md build & cd build &&
    cmake -Werror=dev -G"%CMAKE_GENERATOR%" -DZLIB_ROOT="%ZLIB_ROOT%" -DCMAKE_BUILD_TYPE=%CMAKE_BUILD_TYPE% .. &&
    cd .. &&
    cmake --build build --config %CMAKE_BUILD_TYPE% --target Zpg &&
    cmake --build build --config %CMAKE_BUILD_TYPE% --target zpg_packer &&
    cmake --build build --config %CMAKE_BUILD_TYPE% --target install &&
    cd ..)
  - cd c:\projects\MVRunner

before_build:
- cmd: |
    md build & cd build
    cmake -Werror=dev -G "%CMAKE_GENERATOR%" -DCMAKE_BUILD_TYPE=%CMAKE_BUILD_TYPE% -DZLIB_ROOT="%ZLIB_ROOT%" -DZPG_PACKER_BIN="%ZPG_ROOT%\bin\%ZPG_PACKER_NAME%.exe" ..
    cd ..
    
build_script:
  - cmd: cmake --build build --config %CMAKE_BUILD_TYPE% --target MVRunner
  - cmd: cmake --build build --config %CMAKE_BUILD_TYPE% --target create_zpg
  - cmd: cmake --build build --config %CMAKE_BUILD_TYPE% --target package

artifacts:
  - path: build/Release/MVRunner.exe
    name: MVRunner Release
  - path: build/Debug/MVRunner_d.exe
    name: MVRunner Debug
  - path: build/*.zip
    name: MVRunner Package

branches:
  except:
  - staging.tmp
